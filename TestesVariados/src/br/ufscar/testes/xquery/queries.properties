<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
       
     <entry key = "propertyAnnotation-1">
        declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
    	declare variable $concern as xs:string external;
    	declare variable $class as xs:string external;
    	declare variable $method as xs:string external;
    	declare variable $property as xs:string external;
    	declare variable $kind as xs:string external;
    
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:MethodUnit" and @name=$method]
    			  //codeElement[@xsi:type="code:StorableUnit" and @name=$property and @kind=$kind and empty(@concern)]
		return  insert node attribute concern {$concern} as last into $a
    </entry>
     
     <entry key = "propertyAnnotation-2">
        declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
    	declare variable $concern as xs:string external;
    	declare variable $class as xs:string external;
    	declare variable $property as xs:string external;

    
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:StorableUnit" and @name=$property and empty(@concern)]
		return  insert node attribute concern {$concern} as last into $a
    </entry> 
    
    <entry key = "methodAnnotation">
    	declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
    	declare variable $concern as xs:string external;
    	declare variable $class as xs:string external;
    	declare variable $method as xs:string external;
    	
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:MethodUnit" and @name=$method and empty(@concern)]
		return  insert node attribute concern {$concern} as last into $a
    	
    </entry>
    
    <entry key = "propertyAnnotationRemove-1">
        declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
    	declare variable $class as xs:string external;
    	declare variable $method as xs:string external;
    	declare variable $property as xs:string external;
    	declare variable $kind as xs:string external;
    
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:MethodUnit" and @name=$method]
    			  //codeElement[@xsi:type="code:StorableUnit" and @name=$property and @kind=$kind and not(empty(@concern))]/@concern
		return  delete node $a
    </entry>
    
     <entry key = "propertyAnnotationRemove-2">
        declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
    	declare variable $class as xs:string external;
    	declare variable $property as xs:string external;

    
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:StorableUnit" and @name=$property and not(empty(@concern))]/@concern
		return delete node $a
    </entry> 
    
    <entry key = "methodAnnotationRemove">
        declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";    
    	declare variable $class as xs:string external;
    	declare variable $method as xs:string external;

    
    	for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
    			  //codeElement[@xsi:type="code:ClassUnit" and @name=$class]
    			  //codeElement[@xsi:type="code:MethodUnit" and @name=$method and not(empty(@concern))]/@concern
		return delete node $a
    </entry>  
    
    
    <entry key = "javaAnnotationMining">
    	declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
		
		declare variable $methodName as xs:string external;

		for $prod in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
		    //codeElement[@xsi:type="code:MethodUnit"]//codeRelation
		    let $var:= $prod/annotation[@text = "annotation"]
		    let $return := data(($var/..)/@to) || '/' ||data(($var/../..)/@name) || '/' ||data(($var/../../..)/@name)
		return $return
    </entry>
    
    <entry key = "getTypeAnnotation_2">
    	declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
		
		declare variable $elementPosition as xs:string external;
		
		let $token := tokenize($elementPosition,"_")
		let $prod := data(//kdm:Segment/model[position()=number($token[1])]/codeElement[position()=number($token[2])]/@name)
		return $prod
    </entry>	
    
      <entry key = "getTypeAnnotation_3">
    	declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
		
		declare variable $elementPosition as xs:string external;
		
		let $token := tokenize($elementPosition,"_")
		let $prod := data(//kdm:Segment/model[position()=number($token[1])]/codeElement[position()=number($token[2])]/codeElement[position()=number($token[3])]/@name)
		return $prod
    </entry>
    
     <entry key = "getTypeAnnotation_4">
    	declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
		
		declare variable $elementPosition as xs:string external;
		
		let $token := tokenize($elementPosition,"_")
		let $prod := data(//kdm:Segment/model[position()=number($token[1])]/codeElement[position()=number($token[2])]/codeElement[position()=number($token[3])]/codeElement[position()=number($token[4])]/@name)
		return $prod
    </entry>
    
    <entry key = "getConcernLibrary">
    	
    	declare variable $elementPosition as xs:string external;

		let $var := //Concern[@name=$elementPosition]
		for $i in $var//Element
		return data($var/Package/@name || "." || $i ) 
    </entry>
    
    
     <entry key = "query-1">
    	
	    declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
			    
		for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
		    let $b := $a//actionRelation[@xsi:type="action:Calls"]/@to
		return data($b)   
    </entry>
    
     <entry key = "query-2">
    	
	    declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
			    
		for $a in //kdm:Segment/model[@xsi:type="code:CodeModel" and @name != "externals"]
		    let $b := $a//actionRelation[@xsi:type="action:Calls"]/@from
		return data($b)   
    </entry>
    
      <entry key = "query-3">
    	
	    declare namespace xmi="http://www.omg.org/XMI";
		declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance";
		declare namespace action="http://www.eclipse.org/MoDisco/kdm/action";
		declare namespace code="http://www.eclipse.org/MoDisco/kdm/code";
		declare namespace kdm="http://www.eclipse.org/MoDisco/kdm/kdm";
		declare namespace source="http://www.eclipse.org/MoDisco/kdm/source";
			    
    </entry>
    
    
</properties>